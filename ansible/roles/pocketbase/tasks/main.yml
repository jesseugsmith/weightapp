---
- name: Ensure user exists
  user:
    name: "{{ pocketbase_user }}"
    groups: docker
    create_home: yes
    state: present

- name: Create install directory
  file:
    path: '{{ pocketbase_install_dir }}'
    state: directory
    owner: '{{ pocketbase_user }}'
    group: '{{ pocketbase_user }}'
    mode: '0755'

- name: Ensure hooks destination exists
  file:
    path: '{{ pocketbase_hooks_dest }}'
    state: directory
    owner: '{{ pocketbase_user }}'
    group: '{{ pocketbase_user }}'
    mode: '0755'

- name: Clone repo to temporary location on control machine
  become: false
  git:
    repo: '{{ pocketbase_repo_hooks }}'
    dest: /tmp/weightapp_repo
    version: main
    force: yes
  delegate_to: localhost
  run_once: true

- name: Synchronize hooks to remote hosts (push from control)
  become: false
  synchronize:
    src: '/tmp/weightapp_repo/{{ pocketbase_hooks_path_in_repo }}/'
    dest: '{{ pocketbase_hooks_dest }}/'
    mode: push
  delegate_to: localhost

- name: Synchronize migrations to remote hosts (push from control) if present
  become: false
  synchronize:
    src: '/tmp/weightapp_repo/pocketbase/migrations/'
    dest: '{{ pocketbase_install_dir }}/migrations/'
    mode: push
  delegate_to: localhost
  ignore_errors: true

- name: Create Caddyfile from template
  template:
    src: Caddyfile.j2
    dest: '{{ pocketbase_install_dir }}/Caddyfile'
    owner: '{{ pocketbase_user }}'
    group: '{{ pocketbase_user }}'
    mode: '0644'

- name: Create docker-compose.yml from template
  template:
    src: docker-compose.yml.j2
    dest: '{{ pocketbase_install_dir }}/docker-compose.yml'
    owner: '{{ pocketbase_user }}'
    group: '{{ pocketbase_user }}'
    mode: '0644'

- name: Pull latest images with docker compose
  community.docker.docker_compose_v2:
    project_src: '{{ pocketbase_install_dir }}'
    pull: always
    state: present

- name: Ensure docker-compose services are started
  community.docker.docker_compose_v2:
    project_src: '{{ pocketbase_install_dir }}'
    state: present
    recreate: always

- name: Clean up temporary repo clone
  become: false
  file:
    path: /tmp/weightapp_repo
    state: absent
  delegate_to: localhost
  run_once: true
